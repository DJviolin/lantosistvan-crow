# List of application servers
upstream lantosistvan_app {
    #server 127.0.0.1:8081;
    server 172.16.238.11:8081;
}

# Configuration for the server
server {
    # Running port
    listen       80; # ipv4
    listen       [::]:80; # ipv6
    server_name  localhost;
    root         /var/www/html;

    location /hello {
        return 200 "Hello World!";
    }

    # FTP
    # https://www.nginx.com/resources/admin-guide/serving-static-content/
    # https://innopy.wordpress.com/2016/01/18/nginx-static-file-serving-confusion-with-root-alias/
    location /ftp {
        alias /var/www/html/ftp;
        autoindex on;
        access_log off;
        expires max;
    }

    # Working!!!
    #location ^~ /public {
    #    alias /var/www/html/public/;
    #}

    # Working!!!
    #location ~ ^/(fonts/|gallery/|images/|javascripts/|stylesheets/|ajax_info\.txt|apple-touch-icon\.png|browserconfig\.xml|crossdomain\.xml|favicon\.ico|robots\.txt|tile-wide\.png|tile\.png) {
    #  root /var/www/html/public;
    #  access_log off;
    #  expires max;
    #}

    # Working!!!
    location ~ /.*.(eot|svg|ttf|woff|woff2|txt|jpe?g|gif|png|js|css|txt|xml|ico) {
        #try_files $uri $uri = 404;
        root /var/www/html/public;
        access_log off;
        expires max;
    }

    # Proxying the connections
    location / {
        proxy_pass         http://lantosistvan_app;
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        #
        proxy_cache            lantosistvan_app_cache;
        proxy_cache_revalidate on;
        proxy_cache_min_uses   3;
        proxy_cache_use_stale  error timeout invalid_header updating http_500 http_502 http_503 http_504;
        proxy_cache_lock       on;
        proxy_cache_valid      200 302  60m;
        proxy_cache_valid      404      1m;
        # http://serverfault.com/a/334924/319692
        proxy_ignore_headers   Set-Cookie;
        proxy_ignore_headers   Cache-Control;
        proxy_cache_bypass        $http_secret_header;
        add_header X-Cache-Status $upstream_cache_status;
        # Now, when you want to invalidate that page and cache again
        # Do a secret curl call with the header
        # $ curl "http://127.0.0.1" -s -I -H "secret_header:true"
        # As an added bonus the add_header X-Cache-Status can be used to check if the page is from cache or not
    }

    ### Error handling
    error_page 401 403 404      /404.html;
    ### Redirect server error pages to the static page /50x.html
    error_page 500 502 503 504  /50x.html;
}
